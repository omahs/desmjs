"use strict";(self.webpackChunkdesmjs_documentation=self.webpackChunkdesmjs_documentation||[]).push([[1828],{5318:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>g});var n=s(7378);function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function o(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){a(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function i(e,t){if(null==e)return{};var s,n,a=function(e,t){if(null==e)return{};var s,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||(a[s]=e[s]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),s=t;return e&&(s="function"==typeof e?e(t):o(o({},t),e)),s},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var s=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(s),u=a,g=m["".concat(c,".").concat(u)]||m[u]||d[u]||r;return s?n.createElement(g,o(o({ref:t},p),{},{components:s})):n.createElement(g,o({ref:t},p))}));function g(e,t){var s=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=s.length,o=new Array(r);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<r;l++)o[l]=s[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,s)}u.displayName="MDXCreateElement"},9535:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>m});s(7378);var n=s(5318);function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))})),e}function o(e,t){if(null==e)return{};var s,n,a=function(e,t){if(null==e)return{};var s,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||(a[s]=e[s]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}const i={sidebar_label:"Performing transactions",sidebar_position:2},c="Performing transactions",l={unversionedId:"perform-transactions",id:"perform-transactions",title:"Performing transactions",description:"Overview",source:"@site/docs/perform-transactions.md",sourceDirName:".",slug:"/perform-transactions",permalink:"/perform-transactions",draft:!1,editUrl:"https://github.com/desmos-labs/desmjs/tree/master/docs/docs/perform-transactions.md",tags:[],version:"current",lastUpdatedAt:1692035651,formattedLastUpdatedAt:"Aug 14, 2023",sidebarPosition:2,frontMatter:{sidebar_label:"Performing transactions",sidebar_position:2},sidebar:"docs",previous:{title:"Setup",permalink:"/setup"},next:{title:"Querying data from the chain",permalink:"/query-data"}},p={},m=[{value:"Overview",id:"overview",level:2},{value:"Automatic fees estimation",id:"automatic-fees-estimation",level:3},{value:"Signers",id:"signers",level:2},{value:"Messages",id:"messages",level:2},{value:"Profiles",id:"profiles",level:3},{value:"v3",id:"v3",level:4},{value:"Relationships",id:"relationships",level:3},{value:"v1",id:"v1",level:4},{value:"Subspaces",id:"subspaces",level:3},{value:"v3",id:"v3-1",level:4},{value:"Posts",id:"posts",level:3},{value:"v3",id:"v3-2",level:4},{value:"Reactions",id:"reactions",level:3},{value:"v1",id:"v1-1",level:4},{value:"Reports",id:"reports",level:3},{value:"v1",id:"v1-2",level:4},{value:"Examples",id:"examples",level:2},{value:"Create a profile",id:"create-a-profile",level:3},{value:"Create a relationship",id:"create-a-relationship",level:3},{value:"Create a subspace",id:"create-a-subspace",level:3},{value:"Create a post",id:"create-a-post",level:3},{value:"React to a post with some text",id:"react-to-a-post-with-some-text",level:3},{value:"React to a post with a registered reaction",id:"react-to-a-post-with-a-registered-reaction",level:3},{value:"Report a user",id:"report-a-user",level:3},{value:"Report another user post",id:"report-another-user-post",level:3}],d={toc:m};function u(e){var{components:t}=e,s=o(e,["components"]);return(0,n.kt)("wrapper",r(function(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{},n=Object.keys(s);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(s).filter((function(e){return Object.getOwnPropertyDescriptor(s,e).enumerable})))),n.forEach((function(t){a(e,t,s[t])}))}return e}({},d,s),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"performing-transactions"},"Performing transactions"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"In order to be able to perform transactions you need to do the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"create a  ",(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/Signer"},(0,n.kt)("inlineCode",{parentName:"a"},"Signer"))," instance"),(0,n.kt)("li",{parentName:"ol"},"create a ",(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/DesmosClient"},(0,n.kt)("inlineCode",{parentName:"a"},"DesmosClient"))," instance with the\n",(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/DesmosClient#connectwithsigner"},(0,n.kt)("inlineCode",{parentName:"a"},"connectWithSigner"))," function"),(0,n.kt)("li",{parentName:"ol"},"build the messages that you want to include inside the transaction"),(0,n.kt)("li",{parentName:"ol"},"sign and broadcast the messages with the\n",(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/DesmosClient#signandbroadcast"},(0,n.kt)("inlineCode",{parentName:"a"},"signAndBroadcast"))," method")),(0,n.kt)("p",null,"Here is an example of code that showcase all the steps:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { DesmosClient, OfflineSignerAdapter, SigningMode, GasPrice } from "@desmoslabs/desmjs";\n\n\n// Generate a signer with a random mnmonic. To see the available signer go to the Signers section.\nconst signer = await OfflineSignerAdapter.generate(SigningMode.DIRECT, 24);\n\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\n// Get the signer address from the signer.\nconst [signerAddress] = await signer.getAccounts();\n\n// Save profile message\nconst saveProfile: MsgSaveProfileEncodeObject = {\n  typeUrl: "/desmos.profiles.v3.MsgSaveProfile",\n  value: {\n    creator: signerAddress,\n    bio: "The price of all saiyans",\n    dtag: "vegeta",\n    nickname: "Vegeta",\n    coverPicture: "https://ipfs.io/ipfs/<CID>",\n    profilePicture: "https://ipfs.io/ipfs/<CID>",\n  }\n};\n\n// Message to create a post inside a subspace\nconst createPost: MsgCreatePostEncodeObject = {\n  typeUrl: "/desmos.posts.v3.MsgCreatePost",\n  value: MsgCreatePost.fromPartial({\n    subspaceId: Long.fromNumber(1),\n    author: signerAddress,\n    text: "post content",\n    replySettings: ReplySetting.REPLY_SETTING_EVERYONE\n  })\n};\n\n// Message to be sent to the chain, they will be executed sequentialy from first to last.\nconst messages: EncodeObject[] = [saveProfile, createPost];\n\n// Fee paid to perform the operations.\nconst fees: number | StdFee | "auto" = "auto";\n\n// Optional memo that can be attached to the transaction, max lengh 256 characters.\nconst memo: string | undefined = undefined;\n\nawait client.signandbroadcast(signerAddress, messages, fees, memo);\n')),(0,n.kt)("h3",{id:"automatic-fees-estimation"},"Automatic fees estimation"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"DesmosClient")," class can estimate the fees for you before broadcasting the messages.",(0,n.kt)("br",{parentName:"p"}),"\n","To enable this feature you must provide the ",(0,n.kt)("inlineCode",{parentName:"p"},"gasPrice")," through the ",(0,n.kt)("inlineCode",{parentName:"p"},"options"),"\nparam of ",(0,n.kt)("a",{parentName:"p",href:"/api/desmjs/classes/DesmosClient#connectwithsigner"},(0,n.kt)("inlineCode",{parentName:"a"},"connectWithSigner")),".  "),(0,n.kt)("p",null,"To compute the fees the ",(0,n.kt)("inlineCode",{parentName:"p"},"DesmosClient")," will first estimate the amount of gas required asking the chain to simulate\nan execution with the messages that you want to execute and then will multiply that value for ",(0,n.kt)("inlineCode",{parentName:"p"},"gasPrice"),".\nThe resulting fees then will be ",(0,n.kt)("inlineCode",{parentName:"p"},"gasPrice")," * estimated gas."),(0,n.kt)("p",null,"When you enable this feature you can pass one of the following values as a ",(0,n.kt)("inlineCode",{parentName:"p"},"fee")," param of\n",(0,n.kt)("a",{parentName:"p",href:"/api/desmjs/classes/DesmosClient#signandbroadcast"},(0,n.kt)("inlineCode",{parentName:"a"},"signandbroadcast")),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'"auto"'),": To automatically estimated the fees based on the messages that you want to broadcast;"),(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("inlineCode",{parentName:"li"},"number"),": Multiplication factor used to estimate the gas and fees from the provided messages. When using ",(0,n.kt)("inlineCode",{parentName:"li"},'"auto"')," this\nvalue is ",(0,n.kt)("inlineCode",{parentName:"li"},"1.3")," so the gas used to compute the fees is equal to 1.3 ","*"," estimated gas.")),(0,n.kt)("h2",{id:"signers"},"Signers"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@desmoslabs/desmjs")," provides a set of signers that can be used, here you can find the list:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/OfflineSignerAdapter"},(0,n.kt)("inlineCode",{parentName:"a"},"OfflineSignerAdapter")),": This can be used to create\na signer from a 12/24 words mnemonic or any signer that implements the ",(0,n.kt)("inlineCode",{parentName:"li"},"@cosmjs/OfflineAminoSigner")," or\n",(0,n.kt)("inlineCode",{parentName:"li"},"@cosmjs/OfflineDirectSigner"),";"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/classes/PrivateKeySigner"},(0,n.kt)("inlineCode",{parentName:"a"},"PrivateKeySigner")),": This can be used to create\na signer from a private key.")),(0,n.kt)("p",null,"If none of this signer meet your needs you can implement a custom signer by extending the\n",(0,n.kt)("a",{parentName:"p",href:"/api/desmjs/classes/Signer"},(0,n.kt)("inlineCode",{parentName:"a"},"Signer"))," class.",(0,n.kt)("br",{parentName:"p"}),"\n","For references on how to implement a custom ",(0,n.kt)("inlineCode",{parentName:"p"},"Signer")," you can take a look inside the demsjs\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/desmos-labs/desmjs/tree/main/packages"},"GitHub repo"),".",(0,n.kt)("br",{parentName:"p"}),"\n","Some worth to take a look are:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/desmos-labs/desmjs/tree/main/packages/walletconnect-v2"},"@desmoslabs/desmjs-walletconnect-v2"),":\nSigner that use WalletConnect to sign transactions;"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/desmos-labs/desmjs/tree/main/packages/web3auth-web"},"@desmoslabs/desmjs-web3auth-web"),":\nSigner that receive a Secp256k1 private key from Web3Auth.")),(0,n.kt)("h2",{id:"messages"},"Messages"),(0,n.kt)("p",null,"Here is the list of messages that can be sent divided by module:"),(0,n.kt)("h3",{id:"profiles"},"Profiles"),(0,n.kt)("h4",{id:"v3"},"v3"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgSaveProfileEncodeObject"},"MsgSaveProfileEncodeObject"),":\nCreates/updates the user's Desmos profile."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgDeleteProfileEncodeObject"},"MsgDeleteProfileEncodeObject"),":\nDeletes the user's Desmos profile."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgLinkApplicationEncodeObject"},"MsgLinkApplicationEncodeObject"),":\nLink a centralized application to the user's Desmos profile"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgUnlinkApplicationEncodeObject"},"MsgUnlinkApplicationEncodeObject"),":\nUnlink a centralized application from the user's Desmos profile"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgLinkChainAccountEncodeObject"},"MsgLinkChainAccountEncodeObject"),":\nLink an external blockchain address to the user's Desmos profile"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgUnlinkChainAccountEncodeObject"},"MsgUnlinkChainAccountEncodeObject"),":\nUnlink an external blockchain address from the user's Desmos profile"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgRequestDTagTransferEncodeObject"},"MsgRequestDTagTransferEncodeObject"),":\nCreate a DTag transfer request"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgAcceptDTagTransferRequestEncodeObject"},"MsgAcceptDTagTransferRequestEncodeObject"),":\nAccept a DTag transfer request"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgRefuseDTagTransferRequestEncodeObject"},"MsgRefuseDTagTransferRequestEncodeObject"),":\nRefuse a DTag transfer request"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Profiles.v3.MsgCancelDTagTransferRequestEncodeObject"},"MsgCancelDTagTransferRequestEncodeObject"),":\nCancel a DTag transfer initiate from the user")),(0,n.kt)("h3",{id:"relationships"},"Relationships"),(0,n.kt)("h4",{id:"v1"},"v1"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Relationships.v1.MsgCreateRelationshipEncodeObject"},"MsgCreateRelationshipEncodeObject"),":\nCreate a relationship between two users (A follow B)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Relationships.v1.MsgDeleteRelationshipEncodeObject"},"MsgDeleteRelationshipEncodeObject"),":\nDelete a relationship between two users (A unfollow B)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Relationships.v1.MsgBlockUserEncodeObject"},"MsgBlockUserEncodeObject"),":\nBlock a user"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Relationships.v1.MsgUnblockUserEncodeObject"},"MsgUnblockUserEncodeObject"),":\nUnblock a user")),(0,n.kt)("h3",{id:"subspaces"},"Subspaces"),(0,n.kt)("h4",{id:"v3-1"},"v3"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgCreateSubspaceEncodeObject"},"MsgCreateSubspaceEncodeObject"),":\nCreates a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgEditSubspaceEncodeObject"},"MsgEditSubspaceEncodeObject"),":\nEdit a previously created subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgDeleteSubspaceEncodeObject"},"MsgDeleteSubspaceEncodeObject"),":\nDelete a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgCreateSectionEncodeObject"},"MsgCreateSectionEncodeObject"),":\nCreate a new section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgDeleteSectionEncodeObject"},"MsgDeleteSectionEncodeObject"),":\nDelete a section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgEditSectionEncodeObject"},"MsgEditSectionEncodeObject"),":\nEdit a previously created section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgMoveSectionEncodeObject"},"MsgMoveSectionEncodeObject"),":\nMove a section to another section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgCreateUserGroupEncodeObject"},"MsgCreateUserGroupEncodeObject"),":\nCreate a user group"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgEditUserGroupEncodeObject"},"MsgEditUserGroupEncodeObject"),":\nEdit a previously created user group"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgDeleteUserGroupEncodeObject"},"MsgDeleteUserGroupEncodeObject"),":\nDelete a user group"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgMoveUserGroupEncodeObject"},"MsgMoveUserGroupEncodeObject"),":\nMove a user group to another section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgAddUserToUserGroupEncodeObject"},"MsgAddUserToUserGroupEncodeObject"),":\nAdd a user to a user group"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgRemoveUserFromUserGroupEncodeObject"},"MsgRemoveUserFromUserGroupEncodeObject"),":\nRemove a user from a user group"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgSetUserPermissionsEncodeObject"},"MsgSetUserPermissionsEncodeObject"),":\nSet the permissions of a user inside a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Subspaces.v3.MsgSetUserGroupPermissionsEncodeObject"},"MsgSetUserGroupPermissionsEncodeObject"),":\nSet the permissions that all members of a group will inherit")),(0,n.kt)("h3",{id:"posts"},"Posts"),(0,n.kt)("h4",{id:"v3-2"},"v3"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgCreatePostEncodeObject"},"MsgCreatePostEncodeObject"),":\nCreate a new post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgDeletePostEncodeObject"},"MsgDeletePostEncodeObject"),":\nDelete a post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgEditPostEncodeObject"},"MsgEditPostEncodeObject"),":\nEdit a previously created post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgAddPostAttachmentEncodeObject"},"MsgAddPostAttachmentEncodeObject"),":\nAdd an attachment to a post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgRemovePostAttachmentEncodeObject"},"MsgRemovePostAttachmentEncodeObject"),":\nRemove an attachment from a post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Posts.v3.MsgAnswerPollEncodeObject"},"MsgAnswerPollEncodeObject"),":\nAnswer a poll")),(0,n.kt)("h3",{id:"reactions"},"Reactions"),(0,n.kt)("h4",{id:"v1-1"},"v1"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgAddReactionEncodeObject"},"MsgAddReactionEncodeObject"),":\nAdd a reaction to a post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgRemoveReactionEncodeObject"},"MsgRemoveReactionEncodeObject"),":\nRemove a reaction from a post"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgAddRegisteredReactionEncodeObject"},"MsgAddRegisteredReactionEncodeObject"),":\nRegister a new supported reaction for a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgRemoveRegisteredReactionEncodeObject"},"MsgRemoveRegisteredReactionEncodeObject"),":\nRemove a registered reaction from a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgEditRegisteredReactionEncodeObject"},"MsgEditRegisteredReactionEncodeObject"),":\nEdit a previously registered reaction"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reactions.v1.MsgSetReactionsParamsEncodeObject"},"MsgSetReactionsParamsEncodeObject"),":\nSet the reactions params for a subspace")),(0,n.kt)("h3",{id:"reports"},"Reports"),(0,n.kt)("h4",{id:"v1-2"},"v1"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reports.v1.MsgCreateReportEncodeObject"},"MsgCreateReportEncodeObject"),":\nCreate a report inside a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reports.v1.MsgDeleteReportEncodeObject"},"MsgDeleteReportEncodeObject"),":\nDelete a previously created report from a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reports.v1.MsgSupportStandardReasonEncodeObject"},"MsgSupportStandardReasonEncodeObject"),":\nSupport one reason from the module params"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reports.v1.MsgAddReasonEncodeObject"},"MsgAddReasonEncodeObject"),":\nAdd a new supported reason to a subspace"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/desmjs/interfaces/Reports.v1.MsgRemoveReasonEncodeObject"},"MsgRemoveReasonEncodeObject"),":\nRemove a previously created reason")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("p",null,"Here are some examples that showcase how to interact with the various Desmos modules."),(0,n.kt)("h3",{id:"create-a-profile"},"Create a profile"),(0,n.kt)("p",null,"Here an example that showcase how to create a Desmos profile:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { DesmosClient, GasPrice, Profiles } from "@desmoslabs/desmjs";\n\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst saveProfile: Profiles.v3.MsgSaveProfileEncodeObject = {\n  typeUrl: Profiles.v3.MsgSaveProfileTypeUrl,\n  value: {\n    creator: "desmos...",\n    bio: "The price of all saiyans",\n    dtag: "vegeta",\n    nickname: "Vegeta",\n    coverPicture: "https://ipfs.io/ipfs/<CID>",\n    profilePicture: "https://ipfs.io/ipfs/<CID>",\n  }\n};\n\nawait client.signAndBroadcast(saveProfile.value.creator, [saveProfile], "auto");\n')),(0,n.kt)("h3",{id:"create-a-relationship"},"Create a relationship"),(0,n.kt)("p",null,"Here an example that showcase how to create a relationships:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { DesmosClient, GasPrice, Relationships } from "@desmoslabs/desmjs";\n\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst createRelationship: Relationships.v1.MsgCreateRelationshipEncodeObject = {\n  typeUrl: Relationships.v1.MsgCreateRelationshipTypeUrl,\n  value: {\n    signer: "desmos...",\n    subspaceId: Long.fromNumber(1),\n    counterparty: "desmos..."\n  }\n};\n\nawait client.signAndBroadcast(createRelationship.value.signer, [createRelationship], "auto");\n')),(0,n.kt)("h3",{id:"create-a-subspace"},"Create a subspace"),(0,n.kt)("p",null,"Here an example that showcase how to create a subspace:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { DesmosClient, GasPrice, Subspaces } from "@desmoslabs/desmjs";\n\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst createSubspace: Subspaces.v3.MsgCreateSubspaceEncodeObject = {\n  typeUrl: Subspaces.v3.MsgCreateSubspaceTypeUrl,\n  value: {\n    creator: "desmos...",\n    name: "Desmos subspace",\n    owner: "desmos...",\n    treasury: "desmos...",\n    description: "Subspace where to store my app contente"\n  }\n};\n\nawait client.signAndBroadcast(createSubspace.value.creator, [createSubspace], "auto");\n')),(0,n.kt)("h3",{id:"create-a-post"},"Create a post"),(0,n.kt)("p",null,"Here an example that showcase how to create a post:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { ReplySetting } from "@desmoslabs/desmjs-types/desmos/posts/v3/models";\nimport { MsgCreatePost } from "@desmoslabs/desmjs-types/desmos/posts/v3/msgs";\nimport { DesmosClient, GasPrice, Posts } from "@desmoslabs/desmjs";\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst createPost: Posts.v3.MsgCreatePostEncodeObject = {\n  typeUrl: Posts.v3.MsgCreatePostTypeUrl,\n  value: MsgCreatePost.fromPartial({\n    subspaceId: Long.fromNumber(1),\n    author: "desmos...",\n    text: "post content",\n    replySettings: ReplySetting.REPLY_SETTING_EVERYONE\n  })\n};\n\nawait client.signAndBroadcast(createPost.value.author, [createPost], "auto");\n')),(0,n.kt)("h3",{id:"react-to-a-post-with-some-text"},"React to a post with some text"),(0,n.kt)("p",null,"Here an example that showcase how to react to a post:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { FreeTextValue } from "@desmoslabs/desmjs-types/desmos/reactions/v1/models";\nimport { DesmosClient, GasPrice, Reactions } from "@desmoslabs/desmjs";\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst addReaction: Reactions.v1.MsgAddReactionEncodeObject = {\n  typeUrl:  Reactions.v1.MsgAddReactionTypeUrl,\n  value: {\n    user: "desmos...",\n    postId: Long.fromNumber(1),\n    subspaceId: Long.fromNumber(1),\n    value: {\n      typeUrl: "/desmos.reactions.v1.FreeTextValue",\n      value: FreeTextValue.encode({\n        text: "nice post",\n      }).finish()\n    }\n  }\n};\n\nawait client.signAndBroadcast(addReaction.value.user, [addReaction], "auto");\n')),(0,n.kt)("h3",{id:"react-to-a-post-with-a-registered-reaction"},"React to a post with a registered reaction"),(0,n.kt)("p",null,"Here an example that showcase how to react to a post:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { RegisteredReactionValue } from "@desmoslabs/desmjs-types/desmos/reactions/v1/models";\nimport { DesmosClient, GasPrice, Reactions } from "@desmoslabs/desmjs";\n\nconst signer = ...; // Your signer\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm"),\n});\n\nconst addReaction: Reactions.v1.MsgAddReactionEncodeObject = {\n  typeUrl: Reactions.v1.MsgAddReactionTypeUrl,\n  value: {\n    user: "desmos...",\n    postId: Long.fromNumber(1),\n    subspaceId: Long.fromNumber(1),\n    value: {\n      typeUrl: "/desmos.reactions.v1.RegisteredReactionValue",\n      value: RegisteredReactionValue.encode({\n        registeredReactionId: 1,\n      }).finish()\n    }\n  }\n};\n\nawait client.signAndBroadcast(addReaction.value.user, [addReaction], "auto");\n')),(0,n.kt)("h3",{id:"report-a-user"},"Report a user"),(0,n.kt)("p",null,"Here an example that showcase how to report a user inside a subspace:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { DesmosClient, GasPrice, Reports } from "@desmoslabs/desmjs";\nimport { UserTarget } from "@desmoslabs/desmjs-types/desmos/reports/v1/models";\n\nconst signer =...; // Your signer\nconst client = await DesmosClient.connectWithSigner("https://rpc.mainnet.desmos.network", signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm")\n});\n\nconst reportUser: Reports.v1.MsgCreateReportEncodeObject = {\n  typeUrl: Reports.v1.MsgCreateReportTypeUrl,\n  value: {\n    reporter: "desmos...",\n    subspaceId: Long.fromNumber(1),\n    message: "This user have a bad behaviour",\n    reasonsIds: [1],\n    target: {\n      typeUrl: Reports.v1.UserTargetTypeUrl,\n      value: UserTarget.encode({\n        user: "desmos..."\n      }).finish()\n    }\n  }\n};\n\nawait client.signAndBroadcast(reportUser.value.reporter, [reportUser], "auto");\n')),(0,n.kt)("h3",{id:"report-another-user-post"},"Report another user post"),(0,n.kt)("p",null,"Here an example that showcase how to report another user post:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import Long from "long";\nimport { DesmosClient, GasPrice, Reports } from "@desmoslabs/desmjs";\nimport { PostTarget } from "@desmoslabs/desmjs-types/desmos/reports/v1/models";\n\nconst signer =...; // Your signer\nconst client = await DesmosClient.connectWithSigner("https://rpc.mainnet.desmos.network", signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm")\n});\n\nconst reportPost: Reports.v1.MsgCreateReportEncodeObject = {\n  typeUrl: Reports.v1.MsgCreateReportTypeUrl,\n  value: {\n    reporter: "desmos...",\n    subspaceId: Long.fromNumber(1),\n    message: "This user have a bad behaviour",\n    reasonsIds: [1],\n    target: {\n      typeUrl: Reports.v1.PostTargetTypeUrl,\n      value: PostTarget.encode({\n        postId: Long.fromNumber(1)\n      }).finish()\n    }\n  }\n};\n\nawait client.signAndBroadcast(reportPost.value.reporter, [reportPost], "auto");\n')))}u.isMDXComponent=!0}}]);