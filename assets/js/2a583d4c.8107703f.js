"use strict";(self.webpackChunkdesmjs_documentation=self.webpackChunkdesmjs_documentation||[]).push([[4308],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(b,o(o({ref:t},c),{},{components:n})):a.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>u});n(7378);var a=n(5318);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={sidebar_label:"DesmJS Web3Auth Web",id:"desmsj-web3auth-web",sidebar_position:4},l="DesmJS Web3Auth Web",p={unversionedId:"packages/desmsj-web3auth-web",id:"packages/desmsj-web3auth-web",title:"DesmJS Web3Auth Web",description:"This package provides a Signer capable of sign transactions with the private",source:"@site/docs/packages/web3auth-web.md",sourceDirName:"packages",slug:"/packages/desmsj-web3auth-web",permalink:"/packages/desmsj-web3auth-web",draft:!1,editUrl:"https://github.com/desmos-labs/desmjs/tree/master/docs/docs/packages/web3auth-web.md",tags:[],version:"current",lastUpdatedAt:1692035651,formattedLastUpdatedAt:"Aug 14, 2023",sidebarPosition:4,frontMatter:{sidebar_label:"DesmJS Web3Auth Web",id:"desmsj-web3auth-web",sidebar_position:4},sidebar:"docs",previous:{title:"DesmJS WalletConnect v2",permalink:"/packages/desmsj-walletconnect-v2"},next:{title:"DesmJS Web3Auth Mobile",permalink:"/packages/desmsj-web3auth-mobile"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Get Web3Auth client id",id:"get-web3auth-client-id",level:3},{value:"Usage",id:"usage",level:2},{value:"Initializing <code>OpenLoginAdapter</code>",id:"initializing-openloginadapter",level:3},{value:"Building a <code>DesmosClient</code> instance using <code>Web3AuthSigner</code>",id:"building-a-desmosclient-instance-using-web3authsigner",level:3},{value:"Disconnecting",id:"disconnecting",level:3}],d={toc:u};function m(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"desmjs-web3auth-web"},"DesmJS Web3Auth Web"),(0,a.kt)("p",null,"This package provides a ",(0,a.kt)("inlineCode",{parentName:"p"},"Signer")," capable of sign transactions with the private\nkey provided from ",(0,a.kt)("a",{parentName:"p",href:"https://web3auth.io"},"Web3Auth"),"."),(0,a.kt)("admonition",{title:"React Web package",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This package should be used inside React Web projects. If you want to use the same functionalities inside a\nReact Native app, use ",(0,a.kt)("a",{parentName:"p",href:"/packages/desmsj-web3auth-mobile"},"DesmJS Web3Auth Mobile")," instead.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To install the package, you can run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @desmoslabs/desmjs-web3auth-web @web3auth/modal @web3auth/openlogin-adapter @web3auth/ui\n")),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("h3",{id:"get-web3auth-client-id"},"Get Web3Auth client id"),(0,a.kt)("p",null,"After setting up the project you need to get a Web3Auth client id, you can find how to\nget one in the ",(0,a.kt)("a",{parentName:"p",href:"https://web3auth.io/docs/developer-dashboard/get-client-id"},"Web3Auth docs"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"initializing-openloginadapter"},"Initializing ",(0,a.kt)("inlineCode",{parentName:"h3"},"OpenLoginAdapter")),(0,a.kt)("p",null,"To support the login with different methods, we use the ",(0,a.kt)("inlineCode",{parentName:"p"},"OpenLoginAdapter")," plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { OpenloginAdapter } from "@web3auth/openlogin-adapter";\n\nconst openloginAdapter = new OpenloginAdapter({\n  adapterSettings: {\n    network: "cyan",\n    uxMode: "popup",\n    whiteLabel: {\n      name: "Desmos DApp example",\n      defaultLanguage: "en",\n      dark: true // whether to enable dark mode. defaultValue: false\n    }\n  }\n});\n\n// Confifure the openlogin adapter on the web3auth instance.\nweb3auth.configureAdapter(openloginAdapter);\n')),(0,a.kt)("h3",{id:"building-a-desmosclient-instance-using-web3authsigner"},"Building a ",(0,a.kt)("inlineCode",{parentName:"h3"},"DesmosClient")," instance using ",(0,a.kt)("inlineCode",{parentName:"h3"},"Web3AuthSigner")),(0,a.kt)("p",null,"With the ",(0,a.kt)("inlineCode",{parentName:"p"},"OpenloginAdapter")," instance, you can now instantiate a ",(0,a.kt)("inlineCode",{parentName:"p"},"Signer")," capable of sign transactions\nwith the private key obtained from ",(0,a.kt)("inlineCode",{parentName:"p"},"Web3Auth"),". Once you have the ",(0,a.kt)("inlineCode",{parentName:"p"},"Signer")," instance, you can use that to build\na ",(0,a.kt)("inlineCode",{parentName:"p"},"DesmosClient")," instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { PrivateKeySigner, SigningMode } from "@desmoslabs/desmjs";\nimport { Web3AuthPrivateKeyProvider } from "@desmoslabs/desmjs-web3auth-web";\n\n// Instantiate the Web3AuthPrivateKeyProvider.\nconst privateKeyProvider = new Web3AuthPrivateKeyProvider(\n  web3Auth,\n  {\n    modalConfig: {\n      authMode: "DAPP",\n      clientId: "YOUR WEB3AUTH CLIENT ID",\n      chainConfig: {\n        chainNamespace: "other",\n        blockExplorer: "https://bigdipper.live/desmos",\n        displayName: "Desmos",\n        chainId: "desmos-mainnet",\n        ticker: "DSM",\n        tickerName: "Desmos",\n      },\n    },\n  }\n);\n\n// Instantiate the signer that uses the Web3AuthPrivateKeyProvider.\nconst signer = new PrivateKeySigner(\n  privateKeyProvider,\n  SigningMode.DIRECT\n);\n\n// Connect to the signer.\nawait signer.connect();\n\nconst client = await DesmosClient.connectWithSigner(\'https://rpc.mainnet.desmos.network\', signer, {\n  // Common gas price in the Desmos mainnet.\n  gasPrice: GasPrice.fromString("0.01udsm")\n});\n\n// Use the client to perform operations...\n')),(0,a.kt)("h3",{id:"disconnecting"},"Disconnecting"),(0,a.kt)("p",null,"When you have finished to perform the operations, or if the user wants to disconnect from your app, you can\ncall the ",(0,a.kt)("a",{parentName:"p",href:"/api/keplr/classes/KeplrSigner#disconnect"},(0,a.kt)("inlineCode",{parentName:"a"},"disconnect"))," method\nto terminate the session."))}m.isMDXComponent=!0}}]);